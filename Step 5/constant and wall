#!/usr/bin/env python3

# Created by: Roman Cernetchi
# Created on: January 2021
# This is program renders a sprite on Pybadge

import ugame
import stage

import constants


def game_scene():
    # this function shows sprites on Pybadge

    image_bank_background = stage.Bank.from_bmp16("background.bmp")
    image_bank_sprites = stage.Bank.from_bmp16("background.bmp")
    
    background = stage.Grid(image_bank_background, 10, 8)
    
    boat = stage.Sprite(image_bank_sprites, 3, 75, constants.SCREEN_Y - (2 * constants.SPRITE_SIZE))

    game = stage.Stage(ugame.display, 60)
    game.layers = [boat] + [background]
    game.render_block()

    while True:
        # get user input
        keys = ugame.buttons.get_pressed()
        
        if keys & ugame.K_X != 0:
            print("A")
        if keys & ugame.K_O != 0:
            print("B")
        if keys & ugame.K_START != 0:
            print("Start")
        if keys & ugame.K_SELECT != 0:
            print("Select")

        if keys & ugame.K_RIGHT != 0:
            if boat.x <= (constants.SCREEN_X - constants.SPRITE_SIZE):
                boat.move((boat.x + constants.SPRITE_MOVEMENT_SPEED), boat.y)
            else:
                boat.move(constants.SCREEN_X - constants.SPRITE_SIZE, boat.y)

        if keys & ugame.K_LEFT != 0:
            if boat.x >= 0:
                boat.move((boat.x - constants.SPRITE_MOVEMENT_SPEED), boat.y)
            else:
                boat.move(0, boat.y)

        if keys & ugame.K_UP != 0:
            pass
        if keys & ugame.K_DOWN != 0:
            pass

        # update game logic
        
        # redraw Sprites
        game.render_sprites([boat])
        game.tick()


if __name__ == "__main__":
    game_scene()
